# Generated by Django 4.2.23 on 2025-07-23 11:47

import coordenador.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Telefone inválido. Use o formato (XX) XXXXX-XXXX.', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')])),
                ('cpf', models.CharField(max_length=20, unique=True, validators=[coordenador.models.cpf_valido])),
                ('cidade', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=200, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coordenador',
                'verbose_name_plural': 'Coordenadores',
                'db_table': 'coordenadores',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Produtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('telefone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Telefone inválido. Use o formato (XX) XXXXX-XXXX.', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')])),
                ('cpf', models.CharField(max_length=20, unique=True, validators=[coordenador.models.cpf_valido])),
                ('cidade', models.CharField(max_length=100)),
                ('caf', models.CharField(max_length=100, unique=True)),
                ('validade_caf', models.DateField()),
                ('coordenador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordenador.coordenador')),
            ],
            options={
                'verbose_name': 'Produtor',
                'verbose_name_plural': 'Produtores',
                'db_table': 'produtores',
                'ordering': ['nome', 'caf'],
            },
        ),
        migrations.CreateModel(
            name='Terreno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('cidade', models.CharField(max_length=30)),
                ('produtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordenador.produtor')),
            ],
            options={
                'verbose_name': 'Terreno',
                'verbose_name_plural': 'Terrenos',
                'db_table': 'terrenos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Talhao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=30)),
                ('data_certificacao', models.DateField()),
                ('numero_plantas', models.IntegerField()),
                ('data_plantio', models.DateField()),
                ('variedade', models.CharField(max_length=100)),
                ('area', models.IntegerField()),
                ('validade_caf', models.DateField()),
                ('terreno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordenador.terreno')),
            ],
            options={
                'verbose_name': 'Talhão',
                'verbose_name_plural': 'Talhões',
                'db_table': 'talhoes',
                'ordering': ['nome'],
            },
        ),
    ]
