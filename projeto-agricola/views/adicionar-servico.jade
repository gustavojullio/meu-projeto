doctype html
html(lang="pt-BR")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Adicionar Serviço - EMATER
    
    // Adiciona o manifesto do PWA
    link(rel="manifest", href="/manifest.json")
    link(rel="preconnect", href="https://fonts.googleapis.com")
    link(rel="preconnect", href="https://fonts.gstatic.com", crossorigin)
    link(href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap", rel="stylesheet")
    link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")

    link(rel="stylesheet", href="/css/style.css")

  body
    header.app-header
      a.icon-button(href="/servicos")
        span.material-symbols-outlined arrow_back
      img.header-logo(src="assets/logo_barra.png", alt="Logo EMATER")
      div(style="width: 30px;") 

    main.container.with-header
      h2.form-title Adicionar Novos Serviços
      
      // Mensagem para o usuário offline
      #offline-message.alert.alert-warning(style="display:none;")
        | Você está offline. O serviço será salvo no seu dispositivo e enviado assim que a conexão for restabelecida.
      
      form.add-service-form(method="POST", action="/adicionar-servico")
        
        #servicos-container
          .servico-item
            .servico-item-header
              h3.servico-item-title Serviço 1
              button.remove-item-btn.remove-servico-btn(type="button", title="Remover este serviço") &times;

            .form-group
              label(for="data-0") Data*
              input.form-input(type="date", id="data-0", name="servicos[0][data]", required)
            
            //- .form-group
            //-   label(for="talhao-0") Talhão*
            //-   select.form-input(id="talhao-0", name="servicos[0][talhao]", required)
            //-     option(value="", disabled, selected) Selecione um talhão
            //-     option(value="Talhão 1") Talhão 1
            //-     option(value="Talhão 2") Talhão 2
            //-     option(value="Sede") Sede
            .form-group
              label(for="talhao-0") Talhão*
              select.form-input(id="talhao-0", name="servicos[0][talhao]", required)
                option(value="", disabled, selected) Selecione um talhão

            
            .form-group
              label(for="servico-select-box-text-0") Serviço(s)*
              .multiselect-container
                .select-box
                  span(id="servico-select-box-text-0").placeholder Selecione o(s) serviço(s)
                  span.material-symbols-outlined arrow_drop_down
                .checkboxes-container(id="servico-checkboxes-container-0")
                  .multiselect-search-wrapper
                    input.multiselect-search(type="text", placeholder="Pesquisar serviço...")
                  -
                    var servicos = {
                      adubacao: 'Adubação',
                      aplicacao_fungicida: 'Aplicação de Fungicida',
                      aplicacao_herbicida: 'Aplicação de Herbicida',
                      aplicacao_inseticida: 'Aplicação de Inseticida',
                      arruacao: 'Arruação',
                      capinar: 'Capinar',
                      corretivo_aplicacao_manual: 'Corretivo - Aplicação Manual',
                      desbarra: 'Desbarra',
                      desbrota: 'Desbrota',
                      drench_nutricional_fungicida_inseticida: 'Drench (Nutricional + Fungicida + Inseticida)',
                      drench: 'Drench',
                      gesso_aplicacao_manual: 'Gesso Aplicação Manual',
                      limpeza: 'Limpeza',
                      microterraceamento: 'Microterraceamento',
                      poda: 'Poda',
                      pulverizacao_nutricional: 'Pulverização Nutricional',
                      plantio: 'Plantio',
                      replantio: 'Replantio',
                      rocada: 'Roçada'
                    }
                  each label, value in servicos
                    label
                      input(type="checkbox", name="servicos[0][servico_tipo][]", value=value)
                      | #{label}

            .form-group
              label(for="valor_servico-0") Valor do Serviço-R$*
              .input-stepper
                button.stepper-btn(type="button", data-action="decrement") -
                input.form-input.stepper-input(type="number", id="valor_servico-0", name="servicos[0][valor_servico]", step="0.01", min="0.00", placeholder="R$ 0,00", required)
                button.stepper-btn(type="button", data-action="increment") +

            hr.form-divider

            h3.section-title Produtos
            .repeatable-list.produtos-list
              .repeatable-item
                .repeatable-item-header
                  h4.repeatable-item-title Produto 1
                  button.remove-item-btn(type="button", title="Remover produto") &times;
                .form-group
                  label(for="produto_nome-0-0") Nome do produto
                  input.form-input(type="text", id="produto_nome-0-0", name="servicos[0][produtos][0][nome]", placeholder="Ex: Calcário, 18-04-17")
                .form-group
                  label(for="produto_qtde-0-0") Quantidade
                  .input-stepper
                    button.stepper-btn(type="button", data-action="decrement") -
                    input.form-input.stepper-input(type="number", id="produto_qtde-0-0", name="servicos[0][produtos][0][qtde]", placeholder="0", step="1", min="0")
                    button.stepper-btn(type="button", data-action="increment") +
                .form-group
                  label(for="produto_unidade-0-0") Unidade
                  select.form-input(id="produto_unidade-0-0", name="servicos[0][produtos][0][unidade]")
                    option(value="", disabled, selected) Selecione
                    option(value="galão 5 litros") galão 5 litros
                    option(value="galão 20 litros") galão 20 litros
                    option(value="gramas") gramas
                    option(value="h/tr") h/tr
                    option(value="h/roç") h/roç
                    option(value="Kg/ha") Kg/ha
                    option(value="Kg/200litros") Kg/200litros
                    option(value="kg/canhão") kg/canhão
                    option(value="litros") litros
                    option(value="Litros calda/talhão") Litros calda/talhão
                    option(value="Litros/200litros") Litros/200litros
                    option(value="litros/canhão") litros/canhão
                    option(value="mL/100 litros") mL/100 litros
                    option(value="mL/bomba") mL/bomba
                    option(value="ml") ml
                    option(value="pacote 10 gr") pacote 10 gr
                    option(value="pacote 1 kg") pacote 1 kg
                .form-group
                  label(for="produto_valor-0-0") Valor por Produto-R$
                  .input-stepper
                    button.stepper-btn(type="button", data-action="decrement") -
                    input.form-input.stepper-input(type="number", id="produto_valor-0-0", name="servicos[0][produtos][0][valor]", step="0.01", min="0.00", placeholder="R$ 0,00" required)
                    button.stepper-btn(type="button", data-action="increment") +
            button.add-item-btn.add-produto-btn(type="button")
              span.material-symbols-outlined add_circle
              | Adicionar outro produto

            hr.form-divider

            h3.section-title Trabalhadores / Operadores
            .repeatable-list.trabalhadores-list
              .repeatable-item
                .repeatable-item-header
                  h4.repeatable-item-title Trabalhador 1
                  button.remove-item-btn(type="button", title="Remover trabalhador") &times;
                .form-group
                  label(for="trabalhador_nome-0-0") Nome do trabalhador/operador*
                  input.form-input(type="text", id="trabalhador_nome-0-0", name="servicos[0][trabalhadores][0][nome]", placeholder="Ex: Célio Miguel da Silva", required)
            button.add-item-btn.add-trabalhador-btn(type="button")
              span.material-symbols-outlined add_circle
              | Adicionar novo trabalhador

        .form-actions
          a.btn.btn-secondary(href="/servicos") Cancelar
          button.btn.btn-primary(type="submit") Salvar

    #confirm-modal.modal-overlay
      .modal-content
        p Deseja mesmo cancelar este serviço?
        .modal-actions
          button#modal-btn-cancel.btn.btn-secondary Cancelar
          button#modal-btn-confirm.btn.btn-danger Confirmar
    script.
      document.addEventListener('DOMContentLoaded', () => {
        window.produtorEmail = "#{email}";
      });
    // A tag de script foi alterada para type="module"
    script(src="/js/adicionar-servico.js", type="module")

    script.
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.querySelector('.add-service-form');
        if (form) {
          form.addEventListener('submit', function(event) {
            const servicoItems = document.querySelectorAll('.servico-item');
            let allValid = true;

            servicoItems.forEach((item, index) => {
              const serviceCheckboxes = item.querySelectorAllinput[name^="servicos[${index}][servico_tipo]"]);
              const isAnyChecked = Array.from(serviceCheckboxes).some(checkbox => checkbox.checked);
              
              const multiselectContainer = item.querySelector#servico-checkboxes-container-${index}).closest('.multiselect-container');
              let errorMsg = multiselectContainer.querySelector('.validation-error');

              if (!isAnyChecked) {
                allValid = false;
                if (!errorMsg) {
                  errorMsg = document.createElement('div');
                  errorMsg.className = 'validation-error';
                  errorMsg.style.color = 'red';
                  errorMsg.style.fontSize = '0.875rem';
                  errorMsg.style.marginTop = '4px';
                  multiselectContainer.appendChild(errorMsg);
                }
                errorMsg.textContent = 'Por favor, selecione pelo menos um serviço.';
              } else {
                if (errorMsg) {
                  errorMsg.textContent = '';
                }
              }
            });

            if (!allValid) {
              event.preventDefault(); // Impede o envio do formulário se algum bloco for inválido
            }
          });
        }
      });